[
  {
    "content": "# JBook\n-----------\nThis is an interactive coding environment. You can write Javascript, see it executed, and write comprehensive documentation using markdown.\n\n- Click any  text cell (inclluding this one) to edit it.\n- The code in each code editor is all joined together into one file. If you define a variable in cell #1, you can refer to it in any following cell!\n- You can <span style=\"color: orange;\">show</span> any React component, string, number, or anything else by calling the show function. This is a function built into this environment. Call show multiple times to show multiple values.\n- Re-order or delete cells using the button on the top right.\n- Add new cells by hovering on the divider between each cell.\n\nAll of your changes get saved to the file you opened Jbook with. So if you ran <span style=\"color:orange;\"> npx jsnote-rupesh serve test</span>, all of the text and code you write will be saved to the test.js file.",
    "type": "text",
    "id": "7gw"
  },
  {
    "content": "import { useState } from 'react';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <button onClick={() => setCount(count + 1)}>Click</button>\n      <h3>Count: {count}</h3>\n    </div>\n  );\n};\n\n// Display any variable or React Component by calling 'show'\nshow(<Counter />);\n",
    "type": "code",
    "id": "x6k"
  },
  {
    "content": "function App() {\n  return (\n    <div>\n      <h3>App Says Hi!</h3>\n      <em>Counter component will be rendered below...</em>\n      <hr />\n      {/* Counter was declared in an earlier cell - we can reference it here! */}\n      <Counter />\n    </div>\n  );\n}\n\nshow(<App />);\n",
    "type": "code",
    "id": "38i"
  },
  {
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// We can even import npm hosted css files\nimport 'bulma/css/bulma.css';\n\nconst Buttons = () => {\n  return (\n    <div>\n      <div className=\"buttons\">\n        <button className=\"button is-primary\">Primary</button>\n        <button className=\"button is-link\">Link</button>\n      </div>\n      <div className=\"buttons\">\n        <button className=\"button is-info\">Info</button>\n        <button className=\"button is-success\">Success</button>\n        <button className=\"button is-warning\">Warning</button>\n        <button className=\"button is-danger\">Danger</button>\n      </div>\n    </div>\n  );\n};\n\nshow(<Buttons />);\n",
    "type": "code",
    "id": "6sh"
  }
]
